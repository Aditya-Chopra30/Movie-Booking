package com.infosys.movieSystem.dao;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.infosys.movieSystem.bean.Movie;

@Repository
public class MovieDaoImpl implements MovieDao {

    @Autowired
    private MovieRepository repository;

    @Override
    public void save(Movie movie) {
        repository.save(movie);
    }

    @Override
    public String generateMovieId() {
        String val = repository.getLastId();
        long id = 0L;
        if (val == null) {
            id = 100001L;
        } else {
            id = Integer.parseInt(val.substring(1));
            id++;
        }
        return "M" + id;
    }

    @Override
    public Movie findById(String id) {
        Optional<Movie> movie = repository.findById(id);
        return movie.orElse(null); // Return null if not found
    }

    @Override
    public List<Movie> findAll() {
        return repository.findAll();
    }

    @Override
    public void deleteMovieById(String id) {
        repository.deleteById(id);
    }

    // New method to find a movie by name
    public Movie findByMovieName(String movieName) {
        return repository.findByMovieName(movieName);
    }

    // New method to delete a movie by name
    public void deleteMovieByName(String movieName) {
        Movie movie = findByMovieName(movieName);
        if (movie != null) {
            repository.delete(movie);
        }
    }

    // New method to update a movie by name
    public void updateMovieByName(Movie movie) {
        Movie existingMovie = findByMovieName(movie.getMovieName());
        if (existingMovie != null) {
            existingMovie.setGenre(movie.getGenre());
            existingMovie.setDuration(movie.getDuration());
            existingMovie.setRatings(movie.getRatings());
            repository.save(existingMovie);
        }
    }
}
